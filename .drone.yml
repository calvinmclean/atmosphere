
kind: pipeline
name: default

steps:
  - name: atmosphere
    image: ubuntu:14.04
    commands:
      - export DJANGO_SETTINGS_MODULE=atmosphere.settings
      - apt-get update && apt-get install -y python-pip postgresql
      - pip install -U pip==9.0.3 setuptools
      - pip install pip-tools==1.11.0
      # - psql -c "CREATE USER atmosphere_db_user WITH PASSWORD 'atmosphere_db_pass' CREATEDB;" -U atmosphere_db_user -h postgres
      - psql -c "CREATE DATABASE atmosphere_db WITH OWNER atmosphere_db_user;" -U atmosphere_db_user -h postgres
      - pip-sync requirements.txt
      - cp ./variables.ini.dist ./variables.ini
      - ./configure
      - python manage.py check
      - python manage.py makemigrations --dry-run --check
      - patch variables.ini variables_for_testing_${DISTRIBUTION}.ini.patch
      - ./configure
      - pip-sync dev_requirements.txt
      - ./travis/check_for_dead_code_with_vulture.sh
      - yapf --diff -p -- $(git ls-files | grep '\.py$')
      - prospector --profile prospector_profile.yaml --messages-only -- $(git ls-files | grep '\.py$')
      - coverage run manage.py test --keepdb --noinput --settings=atmosphere.settings
      - coverage run --append manage.py behave --keepdb --tags ~@skip-if-${DISTRIBUTION} --settings=atmosphere.settings --format rerun --outfile rerun_failing.features
      - if [ -f "rerun_failing.features" ]; then python manage.py behave --logging-level DEBUG --capture-stderr --capture --verbosity 3 --keepdb @rerun_failing.features; fi
      - python manage.py makemigrations --dry-run --check

services:
  - name: postgres
    image: postgres:9.6
    environment:
      POSTGRES_USER: atmosphere_db_user
      POSTGRES_PASSWORD: atmosphere_db_pass
